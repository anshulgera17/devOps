Cloud Elements 1st Round Technical questions (after clearing coding task 3 question (2 shell scripting + 1 python))
--------------------------------------------------
What are the tasks you did last week and what are the tasks you have to do next week

AWS
Tell me services which you used from AWS
How to create an EC2 instance tell steps 
How to configure S3 
Types of S3 object, cheapest option to save any object
Is their any object that is restricted in S3
explain in Cloudwatch I want to send email if server is down using AWS SNS

Jenkins
How to create a pipeline
How to create build and deploy
How to deploy in particular slave instance

Linux
from name get the value from multiple lines like 
name:marks
anshul:70
dinesh:30
... 100 lines

Docker
Create image for java application and then deploy on particular port tell step by step

Python 
Explained tasks i did in my work related to python
------------------------------------------------------------------------------------------------
Amdocs 1st technical round Interview questions for DevOps profile (after written cleared)
------------------------------------------------------------------------------------------------
Python: can you write python function, class, write function for add, print hello world, take user arguments and do addition
Git: Git create branch, merge branch, commit, push
Kubernetes: probes in kubernetes, what is helm, kubernetes architecture
what is microservices
Jenkins: what is jenkins, how to add ec2 vm in jenkins
Do you know any monitoring tool
Linux:
command to check the previous command status
how to add path variable using linux command
AWS: what AWS services do you know 
---------------------------------------------
Oracle Interview questions for DevOps Profile
---------------------------------------------
Explain about your project and how much experience do you have in technologies or devops tools, and your day-to-day work  
Architecture of kubernetes
what is helm in kubernetes and how to write YAML file in it
difference between ADD and COPY in docker
difference between CMD and ENTRYPOINT in docker
how to create and run container using dockerfile
what is docker-compose and how to execute Docker-compose.yaml
what is difference between Dockerfile and Docker-compose.yaml file
write code for fibonacci series in python
write code for swapping in python
----------------------------------------------------------
Sailpoint interview questions for DevOps Profile
----------------------------------------------------------
slash 24 in subnet
docker and mysql connection - what docker provides for this
tell me about terraform state file
jenkins freestyle and pipeline job
explain ci-cd workflow
-----------------------------------------------------------
Guavus Interview Questions:
--------------------------------------------------
How to debug if i am unable to create file in Linux
How to debug memory issue in linux
What is ELK stack, how you can explain to your manager
------------------------------------------------------  

Deployment Questions:
what is a blue-green deployment ?
How do you do a hot deployment ?
what is your rollback strategy ?
Have you used jenkins for deployment ?
what jenkins plugin have you used ?
have you ever used user data for deployment ?


Configuration management questions:
Which configuration management tool have you used ?
What is difference between CHEF and Ansible?
Have you written any Cookbook/Modules/Playbook ?

Production support related question:
What is the biggest issue you have faced in a production environment ?
What is your DR strategy in Live website ?
How do you scale a production web service ?
--------------------------------------------------------------------------------------------------------------------------------
This information will also be used to generate list of devops skills that will make their way 

1.       General skills
a.       Programming
                                   i.            Interpreted languages like Ruby, Python
                                   ii.           Compiled languages like Go, Java, Groovy
                                   iii.          Scripting and DSLs like bash, Jenkins DSL
                                   iv.           Build managers like MVN, Gradle, Bundle, PyInstaller
b.       Networking
                                   i.            Routing, DNS, VPN setup, load balancers, dhcp
                                   ii.           Firewall/security such as setting up packe or stateful filters, SNAT, DNAT, NAT, proxies, SSL/TLS
                                   iii.          Debugging, tcpdump, traceroute, ngrep, iperf, nmap, snort, port mirroring
                                   iv.           More advance topics like:
1.       multicast, unicast, dhcp proxies, vlans,trunking,  bonds, bridges, LACP, LAGG, tunnels, GRE, sockets, spanning, store-and-forward
c.       System Administration
                                   i.            Different operating systems (kernel, shell, init, sysctls, package managers sys calls and signals, run-levels)
                                   ii.           Security (roles, permissions, etc.)
                                   iii.          SSH Server and Agent, forward, reverse, dynamic proxies, etc
d.       Security
                                   i.            SSO/Oauth
                                   ii.           Ldap, Active Directory, rfc2307bis related schema standards
                                   iii.          Key and secrets management (e.g., Vault, Chef Databags)
                                   iv.           SSL transactions, Chain of Trust, GPG, Ciphers (AES, Blowfish, etc)
2.       CI/CD and build tools
a.       GitOps and IaaC patterns/tools
b.       Jenkins:
                                   i.            how to standup and configure
                                   ii.           how to make jobs and pipelines, multistage builds
                                   iii.          best practices (ie, testing, artifact management, reporting, ...)
                                   iv.           Jenkinsfiles, Jenkins API, Jenkins X
                                   v.            Jenkins DSL
                                   vi.           Customized groovy applications that run in Jenkins JVM allowed by Script Security
1.       FreeStyleProject and Hudson classes and methods
c.       One of Chef/Ansible/ Salt/Puppet/etc.
                                   i.             configuration, provisioning, etc
                                   ii.            For categories that are primarily yaml can you write custom resources in python or ruby to avoid hacky config DSL?
                                   iii.           Integrations with other tools, like Terraform
3.       Docker
a.       basic concepts and dockerfile syntax/components - hosts the container is called docker, components- daemon, client, registries, objects, namespaces and control groups.
b.       best practices (secrets management, size of containers, speed of image builds, security) - Use a .dockerignore file.
                                                                                                    Containers should be immutable & ephemeral. 
                                                                                                    Minimize the number of layers / Consolidate instructions. 
                                                                                                    Avoid installing unnecessary packages. 
                                                                                                    Sort multi-line arguments. 
                                                                                                    Build cache. 
                                                                                                    Build every time. 
c.       Draft, Skaffold, other tools … list please

4.       Kubernetes/Orchestration
a.       setup a cluster or hybrid environment, or used managed services from cloud providers - Having working experience to setup hybrid environment and used Amazon EKS 
b.       basic concepts and k8s components - The Kubernetes master runs the Scheduler, Controller Manager, API Server and etcd components and is responsible for managing the Kubernetes cluster. 
c.       Patterns: custom resources, stateful vs stateless systems, networking, security, secrets, ... - replication controller, rescheduling pods, scaling pods
d.       Helm and other related tools in the space (lots of project that cover many services needed for containers) - 
e.       Tools tied to scaling, monitoring, reliability, logging, etc... - Kubelet, cAdvisor, Kube-state-metrics, kubernetes Dashboard, Prometheus, Jaeger, Kubewatch, Weave Scope, The EFK Stack 

5.       Public and or Private Cloud
a.       different cloud technologies (VM/container management, managed databases/queues/alerting/etc., networking concepts, security/IAM, etc.) ... please list provider and resource
b.       config as code: Terraform or equivalent (Cloudformation, etc) - Having work experience in terraform and cloudformation templates. 
c.       multi-cloud/hybrid setups (setup VPN, DNS, VPC pairing …) - Having work experience in setup VPN, DNS, VPC pairing setup.